package cn.fh.codeschool.model;
// Generated Apr 29, 2014 2:35:49 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

/**
 * MemberAcquiredBadges generated by hbm2java
 */
@Entity
@Table(name = "member_acquired_badges", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "member_id"))
public class MemberAcquiredBadges implements java.io.Serializable {

	private int id;
	private Member member;
	private Date acquireTime;
	private String memo;
	private Set<AllBadges> allBadgeses = new HashSet<AllBadges>(0);

	public MemberAcquiredBadges() {
	}

	public MemberAcquiredBadges(int id, Member member) {
		this.id = id;
		this.member = member;
	}
	public MemberAcquiredBadges(int id, Member member, Date acquireTime,
			String memo, Set<AllBadges> allBadgeses) {
		this.id = id;
		this.member = member;
		this.acquireTime = acquireTime;
		this.memo = memo;
		this.allBadgeses = allBadgeses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "member_id", unique = false, nullable = false)
	@NotNull
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "acquire_time", length = 13)
	public Date getAcquireTime() {
		return this.acquireTime;
	}

	public void setAcquireTime(Date acquireTime) {
		this.acquireTime = acquireTime;
	}

	@Column(name = "memo")
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "memberAcquiredBadges")
	public Set<AllBadges> getAllBadgeses() {
		return this.allBadgeses;
	}

	public void setAllBadgeses(Set<AllBadges> allBadgeses) {
		this.allBadgeses = allBadgeses;
	}

}
