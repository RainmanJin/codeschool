package cn.fh.codeschool.model;
// Generated Apr 29, 2014 2:35:49 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * AllBadges generated by hbm2java
 */
@Entity
@Table(name = "all_badges")
public class AllBadges implements java.io.Serializable {

	private int id;
	private Course course;
	private MemberAcquiredBadges memberAcquiredBadges;
	private CourseChapter courseChapter;
	private String badgeName;
	private String memo;
	private byte[] badgeIcon;

	public AllBadges() {
	}

	public AllBadges(int id, Course course,
			MemberAcquiredBadges memberAcquiredBadges,
			CourseChapter courseChapter) {
		this.id = id;
		this.course = course;
		this.memberAcquiredBadges = memberAcquiredBadges;
		this.courseChapter = courseChapter;
	}
	public AllBadges(int id, Course course,
			MemberAcquiredBadges memberAcquiredBadges,
			CourseChapter courseChapter, String badgeName, String memo,
			byte[] badgeIcon) {
		this.id = id;
		this.course = course;
		this.memberAcquiredBadges = memberAcquiredBadges;
		this.courseChapter = courseChapter;
		this.badgeName = badgeName;
		this.memo = memo;
		this.badgeIcon = badgeIcon;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_id", unique = false, nullable = false)
	@NotNull
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "member_acquired_badges_id", unique = false, nullable = false)
	@NotNull
	public MemberAcquiredBadges getMemberAcquiredBadges() {
		return this.memberAcquiredBadges;
	}

	public void setMemberAcquiredBadges(
			MemberAcquiredBadges memberAcquiredBadges) {
		this.memberAcquiredBadges = memberAcquiredBadges;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_chapter_id", unique = false, nullable = false)
	@NotNull
	public CourseChapter getCourseChapter() {
		return this.courseChapter;
	}

	public void setCourseChapter(CourseChapter courseChapter) {
		this.courseChapter = courseChapter;
	}

	@Column(name = "badge_name", length = 64)
	@Size(max = 64)
	public String getBadgeName() {
		return this.badgeName;
	}

	public void setBadgeName(String badgeName) {
		this.badgeName = badgeName;
	}

	@Column(name = "memo")
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

	@Column(name = "badge_icon")
	public byte[] getBadgeIcon() {
		return this.badgeIcon;
	}

	public void setBadgeIcon(byte[] badgeIcon) {
		this.badgeIcon = badgeIcon;
	}

}
